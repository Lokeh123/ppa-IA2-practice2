Breakpoint 1, main () at p8original.c:71
71  {
(gdb) s
72    int count = input_n();
(gdb) s
input_n () at p8original.c:9
9   {
(gdb) n
11    printf("How many triangles will you enter:\n");
(gdb) n
How many triangles will you enter:
12    scanf("%d", &n);
(gdb) n
2
13    return n;
(gdb) n
14  }
(gdb) n
main () at p8original.c:73
73    Triangle tris[count];
(gdb) s
74    input_n_triangles(count, tris);
(gdb) s
input_n_triangles (n=2, t=0x7ffece528ef0) at p8original.c:27
27    for (int i = 0; i < n; i++)
(gdb) n
29      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
12
13
27    for (int i = 0; i < n; i++)
(gdb) n
29      t[i] = input_triangle();
(gdb) n
Enter the base, altitude of a triangle:
13
15
27    for (int i = 0; i < n; i++)
(gdb) n
31  }
(gdb) n
main () at p8original.c:75
75    find_areas(count, tris);
(gdb) s
find_areas (n=2, t=0x7ffece528ef0) at p8original.c:40
40    for (int i = 0; i < n; i++)
(gdb) n
42      find_area(&t[i]);
(gdb) n
40    for (int i = 0; i < n; i++)
(gdb) n
42      find_area(&t[i]);
(gdb) n
40    for (int i = 0; i < n; i++)
(gdb) n
44  }
(gdb) n
main () at p8original.c:76
76    Triangle small = find_smallest_triangle(count, tris);
(gdb) s
find_smallest_triangle (n=2, t=0x7ffece528ef0) at p8original.c:49
49    small = t[0];
(gdb) n
51    for (int i = 1; i < n; i++)
(gdb) n
53      if (small.area > t[i].area)
(gdb) n
51    for (int i = 1; i < n; i++)
(gdb) n
58    return small;
(gdb) n
59  }
(gdb) n
main () at p8original.c:77
77    output(count, tris, small);
(gdb) s
output (n=2, t=0x7ffece528ef0, smallest=...) at p8original.c:63
63    for (int i = 0; i < n - 1; i++)
(gdb) n
65      printf("%f, %f and\n", t[i].base, t[i].altitude);
(gdb) n
12.000000, 13.000000 and
63    for (int i = 0; i < n - 1; i++)
(gdb) n
67    printf("%f, %f\nis\ntriangle with base = %f and altitude = %f having area = %f\n", t[n-1].base, t[n-1].altitude, smallest.base, smallest.altitude, smallest.area);
(gdb) n
13.000000, 15.000000
is
triangle with base = 12.000000 and altitude = 13.000000 having area = 78.000000
68  }
(gdb) n
main () at p8original.c:78
78    return 0;
(gdb) n
79  }(gdb) 
